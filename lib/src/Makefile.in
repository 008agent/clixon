#
# Copyright (C) 2009-2016 Olof Hagsand and Benny Holmgren
#
# This file is part of CLIXON.
#
# CLIXON is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# CLIXON is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with CLIXON; see the file LICENSE.  If not, see
# <http://www.gnu.org/licenses/>.
#
prefix 		= @prefix@
datarootdir	= @datarootdir@
srcdir  	= @srcdir@
top_srcdir  	= @top_srcdir@
exec_prefix 	= @exec_prefix@
bindir 		= @bindir@
libdir		= @libdir@
dbdir		= @prefix@/db
mandir		= @mandir@
libexecdir	= @libexecdir@
localstatedir	= @localstatedir@
sysconfdir	= @sysconfdir@

SH_SUFFIX	= @SH_SUFFIX@
CLIXON_VERSION  = @CLIXON_VERSION@
CLIXON_MAJOR    = @CLIXON_VERSION_MAJOR@
CLIXON_MINOR    = @CLIXON_VERSION_MINOR@

VPATH       	= @srcdir@
CC		= @CC@
CFLAGS  	= -fPIC @CFLAGS@ 
LDFLAGS 	= @LDFLAGS@
LIBS    	= @LIBS@ 

YACC		= @YACC@
LEX		= @LEX@

CPPFLAGS  	= @CPPFLAGS@

INCLUDES = -I. @INCLUDES@ -I$(top_srcdir)/lib/clixon -I$(top_srcdir)/include -I$(top_srcdir)

SRC     = clixon_sig.c clixon_qdb.c clixon_log.c clixon_err.c clixon_event.c \
	  clixon_chunk.c clixon_proc.c \
	  clixon_string.c clixon_handle.c  \
	  clixon_xml.c clixon_xml_map.c clixon_file.c \
	  clixon_yang.c clixon_yang_type.c \
	  clixon_hash.c clixon_options.c clixon_plugin.c \
	  clixon_proto.c clixon_proto_encode.c clixon_proto_client.c \
	  clixon_xsl.c clixon_sha1.c clixon_xml_db.c clixon_xml_db_rpc.c

YACCOBJS := lex.clixon_xml_parse.o clixon_xml_parse.tab.o \
	    lex.clixon_yang_parse.o  clixon_yang_parse.tab.o 
# Logically, the below 4 should be in YACCOBJS?


# Generated src 
GENSRC  = build.c 

OBJS    = $(YACCOBJS) $(SRC:.c=.o) 
GENOBJS  = $(GENSRC:.c=.o) 

# Linker-name: libclixon.so
# so-name: libclixon.so.2
# real-name: libclixon.so.2.0
MYLIB        = libclixon$(SH_SUFFIX).$(CLIXON_MAJOR).$(CLIXON_MINOR)
MYLIBSO      = libclixon$(SH_SUFFIX).$(CLIXON_MAJOR)
MYLIBLINK    = libclixon$(SH_SUFFIX)

all:	 $(MYLIB) $(MYLIBLINK)

clean:
	rm -f $(OBJS) $(MYLIB) $(MYLIBLINK) $(GENOBJS) $(GENSRC) *.core
	rm -f clixon_xml_parse.tab.[ch] clixon_xml_parse.yy.[co]
	rm -f clixon_yang_parse.tab.[ch] clixon_yang_parse.[co]
	rm -f lex.clixon_yang_parse.c
	rm -f lex.clixon_xml_parse.c
# disabled when USE_DBSPEC_PT is disabled in clixon_config.h.in
#	rm -f clixon_dbspec.tab.[ch] clixon_dbspec.[co]
#	rm -f lex.clixon_dbspec.c

#############################################################################
# Implicit rules for lex and yacc.
#
# lex files *.l -> *.yy.c
# yacc files *.y -> *.tab.c and *.tab.h
#
# Lex forces yacc include file *.tab.h to be built.
#############################################################################

%.c : %.y  # cancel implicit yacc rule
%.c : %.l  # cancel implicit lex rule

# xml parser
lex.clixon_xml_parse.c : clixon_xml_parse.l clixon_xml_parse.tab.h
	$(LEX) -Pclixon_xml_parse clixon_xml_parse.l # -d is debug

clixon_xml_parse.tab.c clixon_xml_parse.tab.h: clixon_xml_parse.y
	$(YACC) -l -d -p clixon_xml_parse clixon_xml_parse.y # -t is debug
	mv y.tab.c clixon_xml_parse.tab.c
	mv y.tab.h clixon_xml_parse.tab.h

lex.clixon_xml_parse.o : lex.clixon_xml_parse.c clixon_xml_parse.tab.h # special rule to for make clean to work
	$(CC) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) -Wno-error -c $<

# clixon_yang parser
lex.clixon_yang_parse.c : clixon_yang_parse.l clixon_yang_parse.tab.h
	$(LEX) -Pclixon_yang_parse clixon_yang_parse.l # -d is debug

clixon_yang_parse.tab.c clixon_yang_parse.tab.h: clixon_yang_parse.y
	$(YACC) -l -d -p clixon_yang_parse clixon_yang_parse.y # -t is debug
	mv y.tab.c clixon_yang_parse.tab.c
	mv y.tab.h clixon_yang_parse.tab.h

lex.clixon_yang_parse.o : lex.clixon_yang_parse.c clixon_yang_parse.tab.h
	$(CC) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) -Wno-error -c $<

distclean: clean
	rm -f Makefile *~ .depend

.SUFFIXES:
.SUFFIXES: .c .o

.c.o: $(GENSRC)
	$(CC) $(INCLUDES) $(CPPFLAGS) $(CFLAGS) -c $<

.PHONY: build.c
build.c:	
	date +"const char CLIXON_BUILDSTR[64]=\"%Y.%m.%d %H:%M by `whoami` on `hostname`"\"\; > build.c;
	echo "const char CLIXON_VERSION[64]=\"$(CLIXON_VERSION)\""\; >> build.c;


$(MYLIB) : $(GENOBJS) $(OBJS) 
	$(CC) -shared -Wl,-soname,$(MYLIBSO) -o $@ $(GENOBJS) $(OBJS) $(LIBS) -Wl,-soname=$(MYLIBSO) 
# link-name is needed for application linking, eg for clixon_cli and clixon_config
$(MYLIBLINK) : $(MYLIB)
#	ln -sf $(MYLIB) $@

#	ar cru $@ $^
#	ranlib $@

install: install-lib

install-include:

install-lib: $(MYLIB)
	install -m 755 -d $(DESTDIR)$(libdir) 
	install -m 755 $(MYLIB) $(DESTDIR)$(libdir) 
	ln -sf $(MYLIB) $(DESTDIR)$(libdir)/$(MYLIBSO)     # -l:libclixon.so.3
	ln -sf $(MYLIBSO) $(DESTDIR)$(libdir)/$(MYLIBLINK) # -l:libclixon.so

uninstall: 
	rm -f $(libdir)/$(MYLIB)

TAGS:
	find . -name '*.[chyl]' -print | etags -

depend:
	$(CC) $(DEPENDFLAGS) @DEFS@ $(INCLUDES) $(CFLAGS) -MM $(SRC) > .depend

#include .depend

